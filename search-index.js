var searchIndex = {};
searchIndex["scgi"] = {"doc":"SCGI parser.","items":[[4,"ScgiError","scgi","SCGI parsing errors.",null,null],[13,"BadLength","","Length can&#39;t be decoded to an integer.",0,null],[13,"Utf8","","The length or the headers are not in UTF-8.",0,null],[13,"WrongLength","","Netstring sanity checks fail.",0,null],[13,"WrongHeaders","","Error parsing the zero-terminated HTTP headers.",0,null],[13,"EOF","","No more data. The socket has been closed prematurely.",0,null],[13,"IO","","IoError, like when connection closed prematurely.",0,null],[5,"read_headers","","Read the headers from the stream.",null,{"inputs":[{"name":"s"}],"output":{"name":"result"}}],[5,"parse","","Parse the headers, invoking the `header` closure for every header parsed.",null,null],[5,"string_map","","Parse the headers and pack them as strings into a map.",null,null],[5,"str_map","","Parse the headers and pack them as slices into a map.",null,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"scgierror"}}],[11,"from","","",0,{"inputs":[{"name":"utf8error"}],"output":{"name":"scgierror"}}],[11,"fmt","","",0,null]],"paths":[[4,"ScgiError"]]};
searchIndex["bufstream"] = {"doc":"A crate for separately buffered streams.","items":[[3,"BufStream","bufstream","Wraps a Stream and buffers input and output to and from it.",null,null],[3,"IntoInnerError","","An error returned by `into_inner` which combines an error that\nhappened while writing out the buffer, and the buffered writer object\nwhich may be used to recover from the condition.",null,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"with_capacities","","Creates a new buffered stream with explicitly listed capacities for the\nreader/writer buffer.",0,{"inputs":[{"name":"usize"},{"name":"usize"},{"name":"s"}],"output":{"name":"bufstream"}}],[11,"new","","Creates a new buffered stream with the default reader/writer buffer\ncapacities.",0,{"inputs":[{"name":"s"}],"output":{"name":"bufstream"}}],[11,"get_ref","","Gets a reference to the underlying stream.",0,null],[11,"get_mut","","Gets a mutable reference to the underlying stream.",0,null],[11,"into_inner","","Unwraps this `BufStream`, returning the underlying stream.",0,null],[11,"fill_buf","","",0,null],[11,"consume","","",0,null],[11,"read","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,null]],"paths":[[3,"BufStream"],[3,"IntoInnerError"]]};
initSearch(searchIndex);
